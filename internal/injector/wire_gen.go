// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"go-gin-web/internal/controller"
	"go-gin-web/internal/database"
	"go-gin-web/internal/repository"
	"go-gin-web/internal/server"
	"go-gin-web/internal/service"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	db := database.New()
	roleRepository := repository.NewRoleRepository(db)
	userRepository := repository.NewUserRepository(db)
	roleService := service.NewRoleService(roleRepository)
	userService := service.NewUserService(userRepository)
	authService := service.NewAuthService(userRepository)
	userController := controller.NewUserController(userService)
	roleController := controller.NewRoleController(roleService)
	appController := controller.NewAppController()
	appServer := server.NewAppServer(appController, userController, roleController)
	app := &App{
		DB:             db,
		RoleRepository: roleRepository,
		UserRepository: userRepository,
		RoleService:    roleService,
		UserService:    userService,
		AuthService:    authService,
		UserController: userController,
		RoleController: roleController,
		AppController:  appController,
		AppServer:      appServer,
	}
	return app, nil
}

// wire.go:

type App struct {
	DB             *gorm.DB
	RoleRepository repository.RoleRepository
	UserRepository repository.UserRepository
	RoleService    service.RoleService
	UserService    service.UserService
	AuthService    service.AuthService
	UserController controller.UserController
	RoleController controller.RoleController
	AppController  controller.AppController
	AppServer      *server.AppServer
}
